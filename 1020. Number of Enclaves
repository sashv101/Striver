class Solution {
    public void dfs(int a, int b, int[][] mat, boolean[][] vis){
        int[] delRow={0,1,0,-1};
        int[] delCol={1,0,-1,0};
        int n = mat.length;
        int m= mat[0].length;

        vis[a][b]=true;

        for(int i=0;i<4;i++){
            int r = a + delRow[i];
            int c = b + delCol[i];

            if(r>=0 && r<n && c>=0 && c<m && vis[r][c]==false && mat[r][c]==1){
                dfs(r,c,mat,vis);
            }
        }
    }
    public int numEnclaves(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        boolean[][] vis = new boolean[n][m];

        for(int i=0;i<n;i++){
            if(grid[i][0]==1 && !vis[i][0]){
                dfs(i,0,grid,vis);
            }
            if(grid[i][m-1]==1 && !vis[i][m-1]){
                dfs(i,m-1,grid,vis);
            }
        }

        for(int j=0;j<m;j++){
            if(grid[0][j]==1 && !vis[0][j]){
                dfs(0,j,grid,vis);
            }
            if(grid[n-1][j]==1 && !vis[n-1][j]){
                dfs(n-1,j,grid,vis);
            }
        }

        int ans=0;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==false && grid[i][j]==1){
                    ans++;
                }
            }
        }
        return ans;
    }
}
